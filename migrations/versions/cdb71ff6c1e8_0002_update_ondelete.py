"""0002_update_ondelete

Revision ID: cdb71ff6c1e8
Revises: e160cbf4df81
Create Date: 2024-04-20 15:16:23.554258

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "cdb71ff6c1e8"
down_revision: Union[str, None] = "e160cbf4df81"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("fk__book_tag_association__tag_id__tag", "book_tag_association", type_="foreignkey")
    op.drop_constraint("fk__book_tag_association__book_id__books", "book_tag_association", type_="foreignkey")
    op.create_foreign_key(
        op.f("fk__book_tag_association__book_id__books"),
        "book_tag_association",
        "books",
        ["book_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        op.f("fk__book_tag_association__tag_id__tag"),
        "book_tag_association",
        "tag",
        ["tag_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint("fk__books_read__user_id__users", "books_read", type_="foreignkey")
    op.drop_constraint("fk__books_read__book_id__books", "books_read", type_="foreignkey")
    op.create_foreign_key(
        op.f("fk__books_read__book_id__books"), "books_read", "books", ["book_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        op.f("fk__books_read__user_id__users"), "books_read", "users", ["user_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint("fk__favorite_books__user_id__users", "favorite_books", type_="foreignkey")
    op.drop_constraint("fk__favorite_books__book_id__books", "favorite_books", type_="foreignkey")
    op.create_foreign_key(
        op.f("fk__favorite_books__book_id__books"),
        "favorite_books",
        "books",
        ["book_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        op.f("fk__favorite_books__user_id__users"),
        "favorite_books",
        "users",
        ["user_id"],
        ["id"],
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("fk__favorite_books__user_id__users"), "favorite_books", type_="foreignkey")
    op.drop_constraint(op.f("fk__favorite_books__book_id__books"), "favorite_books", type_="foreignkey")
    op.create_foreign_key(
        "fk__favorite_books__book_id__books", "favorite_books", "books", ["book_id"], ["id"]
    )
    op.create_foreign_key(
        "fk__favorite_books__user_id__users", "favorite_books", "users", ["user_id"], ["id"]
    )
    op.drop_constraint(op.f("fk__books_read__user_id__users"), "books_read", type_="foreignkey")
    op.drop_constraint(op.f("fk__books_read__book_id__books"), "books_read", type_="foreignkey")
    op.create_foreign_key("fk__books_read__book_id__books", "books_read", "books", ["book_id"], ["id"])
    op.create_foreign_key("fk__books_read__user_id__users", "books_read", "users", ["user_id"], ["id"])
    op.drop_constraint(
        op.f("fk__book_tag_association__tag_id__tag"), "book_tag_association", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk__book_tag_association__book_id__books"), "book_tag_association", type_="foreignkey"
    )
    op.create_foreign_key(
        "fk__book_tag_association__book_id__books", "book_tag_association", "books", ["book_id"], ["id"]
    )
    op.create_foreign_key(
        "fk__book_tag_association__tag_id__tag", "book_tag_association", "tag", ["tag_id"], ["id"]
    )
    # ### end Alembic commands ###
