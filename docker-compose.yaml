services:
  nginx:
    image: bookshelf-nginx:0.4
    build: frontend
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./config/nginx/frontend.conf:/etc/nginx/conf.d/default.conf:ro"
      - "./media/previews:/var/www/media/previews:ro"
      - "/etc/letsencrypt/live/it-bookshelf.ru/fullchain.pem:/etc/ssl/fullchain.pem:ro"
      - "/etc/letsencrypt/live/it-bookshelf.ru/privkey.pem:/etc/ssl/privkey.pem:ro"
      - "/etc/letsencrypt/ssl-dhparams.pem:/etc/ssl/ssl-dhparams.pem:ro"
    depends_on:
      api-1:
        condition: service_healthy

  api-1: &backend
    build: .
    image: bookshelf:0.4
    command: /bin/sh run.sh
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: "3"
    environment:
      CELERY_BROKER_URL: "redis://redis:6379/1"
      REDIS_HOST: "redis"
      REDIS_DB: 0
    env_file:
      - config/env/api
    volumes:
      - "./media:/app/media"
    depends_on:
      database:
        condition: service_healthy

    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8000/ping"]
      start_period: 5s
      timeout: 10s
      interval: 5s
      retries: 5

  index-meta-proxy:
    build: index-meta-proxy
    image: bookshelf-index-meta-proxy:0.4
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: "3"
    environment:
      API_URL: "https://it-bookshelf.ru"
#      API_URL: "http://nginx"
    depends_on:
      - nginx

  celery-worker:
    <<: *backend
    command: celery -A app.services.celery worker --loglevel=info
    depends_on:
      redis:
        condition: service_started
      database:
        condition: service_healthy
    healthcheck:
      test: .
      disable: true

  redis:
    image: redis:7.2.4-alpine
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: "3"

  database:
    image: postgres:16.2
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: "3"
    env_file:
      - config/env/postgres
    volumes:
      - "./pg_data:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U dbuser -d bookshelf'"]
      start_period: 5s
      timeout: 10s
      interval: 5s
      retries: 5

  pgadmin-balancer:
    image: nginx:1.25.4-alpine
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - "8080:8080"
    volumes:
      - "./config/nginx/pgadmin.conf:/etc/nginx/conf.d/default.conf:ro"
      - "/etc/letsencrypt/live/it-bookshelf.ru/fullchain.pem:/etc/ssl/fullchain.pem:ro"
      - "/etc/letsencrypt/live/it-bookshelf.ru/privkey.pem:/etc/ssl/privkey.pem:ro"
      - "/etc/letsencrypt/ssl-dhparams.pem:/etc/ssl/ssl-dhparams.pem:ro"
    depends_on:
      pgadmin4:
        condition: service_started

  pgadmin4:
    image: elestio/pgadmin:latest
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: "3"
    env_file:
      - config/env/pgadmin
    depends_on:
      database:
        condition: service_healthy
